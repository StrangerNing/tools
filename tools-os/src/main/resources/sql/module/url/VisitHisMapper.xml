<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="me.znzn.tools.module.url.mapper.VisitHisMapper">

    <!-- VisitHis结果集 -->
    <resultMap id="VisitHisMap" type="me.znzn.tools.module.url.entity.po.VisitHis" >
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="url_id" property="urlId" jdbcType="BIGINT"/>
        <result column="ip" property="ip" jdbcType="VARCHAR"/>
        <result column="lng" property="lng" jdbcType="DECIMAL"/>
        <result column="lat" property="lat" jdbcType="DECIMAL"/>
        <result column="address" property="address" jdbcType="VARCHAR"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="remark" property="remark" jdbcType="VARCHAR"/>
    </resultMap>

    <!-- 表名 -->
    <sql id="table_name">t_b_visit_his</sql>

    <!-- 所有字段 -->
    <sql id="all_columns">
        id, url_id, ip, lng, lat, address, create_time, remark
    </sql>

    <!-- 不带主键的所有字段 -->
    <sql id="all_columns_not_with_id">
        url_id, ip, lng, lat, address, create_time, remark
    </sql>

    <!-- 查询条件带where -->
    <sql id="all_query_condition_with_where">
        <trim prefix="WHERE" prefixOverrides="AND|OR">
            <if test="id != null">
                AND id = #{id}
            </if>
            <if test="urlId != null">
                AND url_id = #{urlId}
            </if>
            <if test="ip != null and '' != ip">
                AND ip = #{ip}
            </if>
            <if test="lng != null">
                AND lng = #{lng}
            </if>
            <if test="lat != null">
                AND lat = #{lat}
            </if>
            <if test="address != null and '' != address">
                AND address = #{address}
            </if>
            <if test="createTime != null">
                AND create_time = #{createTime}
            </if>
            <if test="remark != null and '' != remark">
                AND remark = #{remark}
            </if>
        </trim>
    </sql>

    <!-- 删除条件带where -->
    <sql id="all_delete_condition_with_where">
        <trim prefix="WHERE" prefixOverrides="AND|OR">
            <if test="urlId != null">
                AND url_id = #{urlId}
            </if>
            <if test="ip != null and '' != ip">
                AND ip = #{ip}
            </if>
            <if test="lng != null">
                AND lng = #{lng}
            </if>
            <if test="lat != null">
                AND lat = #{lat}
            </if>
            <if test="address != null and '' != address">
                AND address = #{address}
            </if>
            <if test="createTime != null">
                AND create_time = #{createTime}
            </if>
            <if test="remark != null and '' != remark">
                AND remark = #{remark}
            </if>
        </trim>
    </sql>

    <!-- 更新条件带set -->
    <sql id="all_set_condition_with_set">
        <set>
            <if test="urlId != null">
                url_id = #{urlId},
            </if>
            <if test="ip != null and '' != ip">
                ip = #{ip},
            </if>
            <if test="lng != null">
                lng = #{lng},
            </if>
            <if test="lat != null">
                lat = #{lat},
            </if>
            <if test="address != null and '' != address">
                address = #{address},
            </if>
            <if test="createTime != null">
                create_time = #{createTime},
            </if>
            <if test="remark != null and '' != remark">
                remark = #{remark}
            </if>
        </set>
    </sql>

    <!-- 批量更新条件带set -->
    <sql id="all_batch_set_condition_with_set">
        <set>
            <if test="item.urlId != null">
                url_id = #{item.urlId},
            </if>
            <if test="item.ip != null and '' != item.ip">
                ip = #{item.ip},
            </if>
            <if test="item.lng != null">
                lng = #{item.lng},
            </if>
            <if test="item.lat != null">
                lat = #{item.lat},
            </if>
            <if test="item.address != null and '' != item.address">
                address = #{item.address},
            </if>
            <if test="item.createTime != null">
                create_time = #{item.createTime},
            </if>
            <if test="item.remark != null and '' != item.remark">
                remark = #{item.remark}
            </if>
        </set>
    </sql>

    <!--根据对象属性插入-->
    <insert id="insertByProperty" useGeneratedKeys="true" keyProperty="id" keyColumn="id" parameterType="me.znzn.tools.module.url.entity.po.VisitHis">
        INSERT INTO <include refid="table_name"/>
        (
            <include refid="all_columns_not_with_id"/>
        )
        VALUES (
            #{urlId}, #{ip}, #{lng}, #{lat}, #{address}, #{createTime}, #{remark}
        )
    </insert>

    <!--根据对象属性插入-->
    <insert id="insertBatchByProperty" useGeneratedKeys="true" keyProperty="id" keyColumn="id" parameterType="java.util.List">
        INSERT INTO <include refid="table_name"/>
        (
            <include refid="all_columns_not_with_id"/>
        )
        VALUES
        <foreach collection="list" item="item" separator="," index = "index">
        (
            #{item.urlId}, #{item.ip}, #{item.lng}, #{item.lat}, #{item.address}, #{item.createTime}, #{item.remark}
        )
        </foreach>
    </insert>

    <!--根据主键更新-->
    <update id="updateByPrimaryKey" parameterType="me.znzn.tools.module.url.entity.po.VisitHis">
        UPDATE <include refid="table_name"/>
            <include refid="all_set_condition_with_set"/>
        WHERE
            id = #{id}
    </update>

    <!--根据主键批量更新-->
    <update id="updateBatchByPrimaryKey" parameterType="java.util.List">
        <foreach collection="list" item="item" index="index" separator=";">
            UPDATE <include refid="table_name"/>
                <include refid="all_batch_set_condition_with_set"/>
            WHERE
                id = #{item.id}
        </foreach>
    </update>

    <!--根据主键删除-->
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        DELETE FROM
            <include refid="table_name"/>
        WHERE
            id = #{id}
    </delete>

    <!--根据主键列表批量删除-->
    <delete id="deleteBatchByPrimaryKey" parameterType="java.util.List">
        DELETE FROM
            <include refid="table_name"/>
        WHERE
            id
        IN
        <foreach collection="list" item="item" open="(" separator="," close=")">
            #{item}
        </foreach>
    </delete>

    <!--根据属性删除-->
    <delete id="deleteByProperty" parameterType="me.znzn.tools.module.url.entity.po.VisitHis">
        DELETE FROM <include refid="table_name"/>
        <include refid="all_delete_condition_with_where"/>
    </delete>

    <!-- 根据主键查询 -->
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="VisitHisMap">
        SELECT
            <include refid="all_columns"/>
        FROM
            <include refid="table_name"/>
        WHERE
            id = #{id}
    </select>

    <!-- 根据对象属性查询 -->
    <select id="selectByProperty" parameterType="me.znzn.tools.module.url.entity.po.VisitHis" resultMap="VisitHisMap">
        SELECT
            <include refid="all_columns"/>
        FROM
            <include refid="table_name"/>
        <include refid="all_query_condition_with_where"/>
        ORDER BY create_time DESC
    </select>

    <!-- 根据对象属性查询统计 -->
    <select id="countByProperty" parameterType="me.znzn.tools.module.url.entity.po.VisitHis" resultType="java.lang.Long">
        SELECT
            COUNT(*)
        FROM
            <include refid="table_name"/>
        <include refid="all_query_condition_with_where"/>
    </select>

    <select id="getVisitMapCount" parameterType="me.znzn.tools.module.url.entity.form.VisitHisForm" resultType="me.znzn.tools.module.url.entity.vo.VisitHisVO">
        SELECT lng, lat, COUNT(*) AS count
        FROM t_b_visit_his
        WHERE t_b_visit_his.url_id = #{urlId}
        GROUP BY lng, lat
    </select>
</mapper>
